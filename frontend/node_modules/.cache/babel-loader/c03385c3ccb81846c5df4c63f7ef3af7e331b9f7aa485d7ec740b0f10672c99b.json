{"ast":null,"code":"import axios from 'axios';\nconst instance = axios.create({\n  baseURL: 'http://localhost:9000',\n  //la ip podría cambiar http://44.202.167.5\n  timeout: 100000,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n//Registro de nuevo usuario\nexport const registry = async (email, name, password) => {\n  const {\n    data\n  } = await instance.post(\"/registro\", {\n    user_email: email,\n    user_name: name,\n    user_password: password\n  });\n  return data;\n};\n//Inicio de sesión\nexport const login = async (email, password) => {\n  console.log(email, password);\n  const {\n    data\n  } = await instance.post(\"/login\", {\n    user_email: email,\n    user_password: password\n  });\n  return data;\n};\n//Obtener información del usuario\nexport const getUserInfo = async email => {\n  console.log(email);\n  const {\n    data\n  } = await instance.post(\"/userInfo\", {\n    user_email: email\n  });\n  console.log(data);\n  return data;\n};\n\n//Obtener libros disponibles\nexport const getBooks = async () => {\n  const {\n    data\n  } = await instance.get(\"/books\");\n  return {\n    books: data\n  };\n};\n\n//Obtener lista de generos\nexport const getGenres = async () => {\n  const {\n    data\n  } = await instance.get(\"/genres\");\n  return {\n    genres: data\n  };\n};\n\n//Obtener lista de libros filtrados por género\nexport const getBooksByGenre = async genre => {\n  const {\n    data\n  } = await instance.get(\"/book/by/genre/\" + genre);\n  return {\n    books: data\n  };\n};\n\n//Obtener promedio de calificacaiones para un libro\nexport const getBookRating = async book => {\n  const {\n    data\n  } = await instance.get(\"/getRating/\" + book);\n  return data[0];\n};\n\n//Obtener reseñas de un libro\nexport const getBookOpinion = async book => {\n  const {\n    data\n  } = await instance.get(\"ratings/\" + book);\n  return {\n    opinions: data\n  };\n};\n\n//Obtener géneros que posee un libro\nexport const getBookGenres = async book => {\n  const {\n    data\n  } = await instance.get(\"/book/genre/\" + book);\n  return {\n    genres: data\n  };\n};\n//Enviar reseñas de libros\nexport const setReview = async (rating, comment, book, user) => {\n  const {\n    data\n  } = await instance.post(\"/setRating\", {\n    rating_value: rating,\n    rating_comment: comment,\n    book_id: book,\n    user_email: user\n  });\n  return data;\n};","map":{"version":3,"names":["axios","instance","create","baseURL","timeout","headers","registry","email","name","password","data","post","user_email","user_name","user_password","login","console","log","getUserInfo","getBooks","get","books","getGenres","genres","getBooksByGenre","genre","getBookRating","book","getBookOpinion","opinions","getBookGenres","setReview","rating","comment","user","rating_value","rating_comment","book_id"],"sources":["C:/Users/luisa/OneDrive/Documentos/USAC/1S2024/Semi1/Laboratorio/SEMI1_Proyecto_G5/frontend/src/services/APIs/requests.js"],"sourcesContent":["import axios from 'axios'\r\n\r\nconst instance = axios.create(\r\n    {\r\n        baseURL: 'http://localhost:9000', //la ip podría cambiar http://44.202.167.5\r\n        timeout: 100000,\r\n        headers:{\r\n            'Content-Type':'application/json'\r\n        }\r\n    }\r\n)\r\n//Registro de nuevo usuario\r\nexport const registry = async(email, name, password) =>{\r\n    \r\n    const { data } = await instance.post(\"/registro\", {user_email:email, user_name:name, user_password:password})\r\n    return data\r\n}\r\n//Inicio de sesión\r\nexport const login = async(email, password) =>{\r\n    console.log(email,password)\r\n    const { data } = await instance.post(\"/login\", {user_email:email, user_password:password})\r\n    return data\r\n}\r\n//Obtener información del usuario\r\nexport const getUserInfo = async(email) =>{\r\n    console.log(email)\r\n    const { data } = await instance.post(\"/userInfo\", {user_email:email})\r\n    console.log(data)\r\n    return data\r\n}\r\n\r\n//Obtener libros disponibles\r\nexport const getBooks = async() =>{\r\n    const { data } = await instance.get(\"/books\")\r\n    return {books:data}\r\n}\r\n\r\n//Obtener lista de generos\r\nexport const getGenres = async() =>{\r\n    const { data } = await instance.get(\"/genres\")\r\n    return {genres:data}\r\n}\r\n\r\n//Obtener lista de libros filtrados por género\r\nexport const getBooksByGenre = async(genre) =>{\r\n    const { data } = await instance.get(\"/book/by/genre/\"+genre)\r\n    return {books:data}\r\n}\r\n\r\n//Obtener promedio de calificacaiones para un libro\r\nexport const getBookRating = async(book) =>{\r\n    const { data } = await instance.get(\"/getRating/\"+book)\r\n    return data[0]\r\n}\r\n\r\n//Obtener reseñas de un libro\r\nexport const getBookOpinion = async(book) =>{\r\n    const { data } = await instance.get(\"ratings/\"+book)\r\n    return {opinions:data}\r\n}\r\n\r\n//Obtener géneros que posee un libro\r\nexport const getBookGenres = async(book) =>{\r\n    const { data } = await instance.get(\"/book/genre/\"+book)\r\n    return {genres:data}\r\n}\r\n//Enviar reseñas de libros\r\nexport const setReview = async(rating, comment, book, user) =>{\r\n    const { data } = await instance.post(\"/setRating\",{rating_value:rating, rating_comment:comment, book_id:book, user_email:user})\r\n    return data\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}